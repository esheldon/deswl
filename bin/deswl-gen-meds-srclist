#!/usr/bin/python
"""
    %prog [options] medsconf coadd_run band

This is the list of red image files and background image files
"""

import sys
import os
import desdb
import deswl

from optparse import OptionParser
parser=OptionParser(__doc__)

parser.add_option('-c','--check',action='store_true',
                  help="check that files exist")

def do_check(r):
    nmissing=0
    for ftype in ['red_image','red_bkg','red_seg']:
        if not os.path.exists(r[ftype]):
            print "missing %s %s %s: %s" % (r['run'],r['expname'],ftype,r[ftype])
            nmissing+=1

    return nmissing

def is_sva1(release):
    if isinstance(release,basestring):
        return 'sva1' in release.lower()
    else:
        for r in release:
            if 'sva1' in r.lower():
                return True

    return False

def get_magzp_offset(medsconf):
    """
    For SVA1 an artificial offset was added to the zeropoints
    in the zeropoint table.

    Still need to check if these are in the coadd_src table
    """
    conf=deswl.files.read_meds_config(medsconf)
    
    if is_sva1(conf['release']):
        offset=0.057
        print 'using magzp offset:',offset
    else:
        offset=0.0

    return offset

def main():
    options,args = parser.parse_args(sys.argv[1:])

    if len(args) < 3:
        parser.print_help()
        sys.exit(1)

    medsconf=args[0]
    coadd_run=args[1]
    band=args[2]

    magzp_offset = get_magzp_offset(medsconf)

    cf=desdb.files.Coadd(coadd_run=coadd_run,
                         band=band)

    cf.load(srclist=True)

    df=desdb.files.DESFiles()
    srclist=df.url(medsconf=medsconf,
                   type='meds_srclist',
                   coadd_run=coadd_run,
                   tilename=cf['tilename'],
                   band=band)

    d=os.path.dirname(srclist)
    if not os.path.exists(d):
        try:
            os.makedirs(d)
        except:
            pass

    print 'writing:',srclist

    nmissing=0
    with open(srclist,'w') as fobj:
        for r in cf.srclist:

            if options.check:
                nmissing += do_check(r)

            magzp = r['magzp'] + magzp_offset

            line='%s %s %s %s\n'
            line = line % (r['red_image'],r['red_bkg'],r['red_seg'],r['magzp'])
            fobj.write(line)
    if options.check:
        print 'nmissing: ',nmissing
main()
