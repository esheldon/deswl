#!/usr/bin/env python
"""
    %prog [options] run band cutout_size

Generate shell script to run make-cutouts.
"""

import os,sys
from sys import stderr
import deswl
import desdb

from optparse import OptionParser
parser = OptionParser(__doc__)

parser.add_option('--whose',default='wlpipe',
                  help="Code owner, default %default")
parser.add_option('--vers',default='work',
                  help="Code version, default %default")

_template="""
module unload shapelets-{whose} && module load shapelets-{whose}/{vers}

coaddimage_file="{coadd_image}"
coaddcat_file="{coadd_cat}"
coadd_srclist="{meds_input}"
cutout_size={cutout_size}
cutout_file="{meds_file}"

d=$(dirname "$cutout_file")
mkdir -p "$d"

make-cutouts \\
    coaddimage_file="$coaddimage_file" \\
    coaddcat_file="$coaddcat_file"     \\
    coadd_srclist="$coadd_srclist"     \\
    cutout_size="$cutout_size"         \\
    cutout_file="$cutout_file"
"""

def make_dirs(script_file, meds_file):
    d=os.path.dirname(script_file)
    if not os.path.exists(d):
        print 'making dir:',d
        os.makedirs(d)
    d=os.path.dirname(meds_file)
    if not os.path.exists(d):
        print 'making dir:',d
        os.makedirs(d)

def main():

    options, args = parser.parse_args(sys.argv[1:])
    if len(args) < 3:
        parser.print_help()
        sys.exit(45)

    coadd_run=args[0]
    band=args[1]
    cutout_size=int(args[2])

    df=desdb.files.DESFiles()
    cf=desdb.files.Coadd(run=coadd_run,
                         band=band)
    cf.load()

    coadd_image=df.url(type='coadd_image',
                       run=coadd_run,
                       tilename=cf['tilename'],
                       band=band)
    coadd_cat=df.url(type='coadd_cat',
                     run=coadd_run,
                     tilename=cf['tilename'],
                     band=band)
    meds_input=df.url(type='meds_input',
                      run=coadd_run,
                      tilename=cf['tilename'],
                      band=band)

    meds_file=df.url(type='meds',
                      run=coadd_run,
                      tilename=cf['tilename'],
                      band=band)

    text=_template.format(vers=options.vers,
                          whose=options.whose,
                          coadd_image=coadd_image,
                          coadd_cat=coadd_cat,
                          meds_input=meds_input,
                          cutout_size=cutout_size,
                          meds_file=meds_file)
    script_file=df.url(type='meds_script',
                       run=coadd_run,
                       tilename=cf['tilename'],
                       band=band)

    make_dirs(script_file, meds_file)
    
    print script_file
    with open(script_file,'w') as fobj:
        fobj.write(text)

main()

